@model IEnumerable<ParkFinder.Models.Park>

@{
    ViewData["Title"] = "Home Page";
}


<style>
    #searchbar {
        margin: 1em 0;
    }

    #search {
        width: 40%;
    }

    #submitbtn {
        width: 100px;
    }
</style>


<div>
    <h1>JS Parks</h1>

    <div id="searchbar">
        <input type="text" name="search" id="search" />
    </div>

    <div id="data">
    </div>
</div>


<script>
    (async function () {
        const txtSearch = document.querySelector('#search');
        const parks = document.querySelector('#data');

        const addPark = (park) => {
            let name = document.createElement('h3');
            let borough = document.createElement('p');
            let acres = document.createElement('p');
            let description = document.createElement('p');

            let div = document.createElement('div');

            name.textContent = park.parkName;
            borough.innerHTML = '<i>Borough: </i>' + park.borough;
            acres.innerHTML = '<i>Acres: </i>' + park.acres;
            description.innerHTML = '<i>Description: </i> <p/>' + park.description;

            div.appendChild(name);
            div.appendChild(borough);
            div.appendChild(acres);
            div.appendChild(description);

            parks.appendChild(div);
        }

        const addParks = (search) => {
            fetch(`/JsParkData/GetParkData/${search}`)
                .then(response => response.json())
                .then(json => {
                    parks.innerHTML = '';
                    json.forEach(p => addPark(p))
                });
        }

        txtSearch.addEventListener('keyup', (e) => {
            if (e.key === 'Enter')
                addParks(txtSearch.value);
        });

        addParks();
    })()
</script>